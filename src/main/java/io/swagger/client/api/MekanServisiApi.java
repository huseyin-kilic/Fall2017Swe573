/*
 * Etkinlik.io API
 * Tüm etkinlikleri toplamayı, kategorize etmeyi ve ilgili kişilere duyurmayı amaç edinmiş bir projedir. Bu API dokümantasyonu ile bir çok kaynaktan ve organizatörden beslenerek bir araya getirdiğimiz etkinlik içeriğine entegre olarak uygulamalar geliştirebilirsiniz. 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.BulunamadiHatasi;
import io.swagger.client.model.GenelHata;
import io.swagger.client.model.InlineResponse2001;
import io.swagger.client.model.Mekan;
import io.swagger.client.model.YetkilendirmeHatasi;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MekanServisiApi {
    private ApiClient apiClient;

    public MekanServisiApi() {
        this(Configuration.getDefaultApiClient());
    }

    public MekanServisiApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for mekanIdGet
     * @param id Mekan id bilgisi. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call mekanIdGetCall(Integer id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/mekan/{id}"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call mekanIdGetValidateBeforeCall(Integer id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling mekanIdGet(Async)");
        }
        
        
        com.squareup.okhttp.Call call = mekanIdGetCall(id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Mekan Detay
     * 
     * @param id Mekan id bilgisi. (required)
     * @return Mekan
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Mekan mekanIdGet(Integer id) throws ApiException {
        ApiResponse<Mekan> resp = mekanIdGetWithHttpInfo(id);
        return resp.getData();
    }

    /**
     * Mekan Detay
     * 
     * @param id Mekan id bilgisi. (required)
     * @return ApiResponse&lt;Mekan&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Mekan> mekanIdGetWithHttpInfo(Integer id) throws ApiException {
        com.squareup.okhttp.Call call = mekanIdGetValidateBeforeCall(id, null, null);
        Type localVarReturnType = new TypeToken<Mekan>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Mekan Detay (asynchronously)
     * 
     * @param id Mekan id bilgisi. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call mekanIdGetAsync(Integer id, final ApiCallback<Mekan> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = mekanIdGetValidateBeforeCall(id, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Mekan>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for mekanlarGet
     * @param sehirId Kayıtları şehir id bilgisine göre filtrelemek için. (optional)
     * @param ilceId Kayıtları ilçe id bilgisine göre filtrelemek için. (optional)
     * @param semtId Kayıtları semt id bilgisine göre filtrelemek için. (optional)
     * @param sayfa Sonuçları sayfa bilgisine göre listelemek için. (optional, default to 1)
     * @param adet Kaç adet sonuç geleceğini belirtmek için. (optional, default to 50)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call mekanlarGetCall(Integer sehirId, Integer ilceId, Integer semtId, Integer sayfa, Integer adet, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/mekanlar";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (sehirId != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "sehirId", sehirId));
        if (ilceId != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "ilceId", ilceId));
        if (semtId != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "semtId", semtId));
        if (sayfa != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "sayfa", sayfa));
        if (adet != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "adet", adet));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "apiKey" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call mekanlarGetValidateBeforeCall(Integer sehirId, Integer ilceId, Integer semtId, Integer sayfa, Integer adet, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = mekanlarGetCall(sehirId, ilceId, semtId, sayfa, adet, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Mekan Listesi
     * 
     * @param sehirId Kayıtları şehir id bilgisine göre filtrelemek için. (optional)
     * @param ilceId Kayıtları ilçe id bilgisine göre filtrelemek için. (optional)
     * @param semtId Kayıtları semt id bilgisine göre filtrelemek için. (optional)
     * @param sayfa Sonuçları sayfa bilgisine göre listelemek için. (optional, default to 1)
     * @param adet Kaç adet sonuç geleceğini belirtmek için. (optional, default to 50)
     * @return InlineResponse2001
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse2001 mekanlarGet(Integer sehirId, Integer ilceId, Integer semtId, Integer sayfa, Integer adet) throws ApiException {
        ApiResponse<InlineResponse2001> resp = mekanlarGetWithHttpInfo(sehirId, ilceId, semtId, sayfa, adet);
        return resp.getData();
    }

    /**
     * Mekan Listesi
     * 
     * @param sehirId Kayıtları şehir id bilgisine göre filtrelemek için. (optional)
     * @param ilceId Kayıtları ilçe id bilgisine göre filtrelemek için. (optional)
     * @param semtId Kayıtları semt id bilgisine göre filtrelemek için. (optional)
     * @param sayfa Sonuçları sayfa bilgisine göre listelemek için. (optional, default to 1)
     * @param adet Kaç adet sonuç geleceğini belirtmek için. (optional, default to 50)
     * @return ApiResponse&lt;InlineResponse2001&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse2001> mekanlarGetWithHttpInfo(Integer sehirId, Integer ilceId, Integer semtId, Integer sayfa, Integer adet) throws ApiException {
        com.squareup.okhttp.Call call = mekanlarGetValidateBeforeCall(sehirId, ilceId, semtId, sayfa, adet, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse2001>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Mekan Listesi (asynchronously)
     * 
     * @param sehirId Kayıtları şehir id bilgisine göre filtrelemek için. (optional)
     * @param ilceId Kayıtları ilçe id bilgisine göre filtrelemek için. (optional)
     * @param semtId Kayıtları semt id bilgisine göre filtrelemek için. (optional)
     * @param sayfa Sonuçları sayfa bilgisine göre listelemek için. (optional, default to 1)
     * @param adet Kaç adet sonuç geleceğini belirtmek için. (optional, default to 50)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call mekanlarGetAsync(Integer sehirId, Integer ilceId, Integer semtId, Integer sayfa, Integer adet, final ApiCallback<InlineResponse2001> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = mekanlarGetValidateBeforeCall(sehirId, ilceId, semtId, sayfa, adet, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse2001>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
